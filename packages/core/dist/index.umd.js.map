{"version":3,"file":"index.umd.js","sources":["../src/security-utils.ts","../src/chatbot-core.ts","../src/advanced-features.ts"],"sourcesContent":["/**\r\n * Security utilities for the chatbot\r\n * Provides functions to sanitize inputs, validate files, and prevent common attacks\r\n */\r\n\r\nexport class SecurityUtils {\r\n  /**\r\n   * Sanitize HTML content to prevent XSS attacks\r\n   * @param input - The input string to sanitize\r\n   * @returns Sanitized string safe for HTML insertion\r\n   */\r\n  static sanitizeHTML(input: string): string {\r\n    if (!input || typeof input !== 'string') return '';\r\n    \r\n    // Create a temporary div element to safely encode HTML entities\r\n    const div = document.createElement('div');\r\n    div.textContent = input;\r\n    return div.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * Sanitize HTML attributes to prevent attribute injection\r\n   * @param input - The attribute value to sanitize\r\n   * @returns Sanitized attribute value\r\n   */\r\n  static sanitizeAttribute(input: string): string {\r\n    if (!input || typeof input !== 'string') return '';\r\n    \r\n    // Remove potentially dangerous characters from attributes\r\n    return input\r\n      .replace(/[<>\"'&]/g, (match) => {\r\n        const entities: { [key: string]: string } = {\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          \"'\": '&#x27;',\r\n          '&': '&amp;'\r\n        };\r\n        return entities[match] || match;\r\n      })\r\n      .substring(0, 1000); // Limit attribute length\r\n  }\r\n\r\n  /**\r\n   * Validate file type by checking actual MIME type\r\n   * @param file - The file to validate\r\n   * @param allowedTypes - Array of allowed MIME types\r\n   * @returns True if file type is allowed\r\n   */\r\n  static validateFileType(file: File, allowedTypes: string[]): boolean {\r\n    if (!file || !file.type) return false;\r\n    return allowedTypes.includes(file.type);\r\n  }\r\n\r\n  /**\r\n   * Validate file size\r\n   * @param file - The file to validate\r\n   * @param maxSize - Maximum allowed file size in bytes\r\n   * @returns True if file size is within limit\r\n   */\r\n  static validateFileSize(file: File, maxSize: number): boolean {\r\n    if (!file) return false;\r\n    return file.size <= maxSize;\r\n  }\r\n\r\n  /**\r\n   * Sanitize file name to prevent path traversal attacks\r\n   * @param fileName - The file name to sanitize\r\n   * @returns Sanitized file name\r\n   */\r\n  static sanitizeFileName(fileName: string): string {\r\n    if (!fileName || typeof fileName !== 'string') return 'unnamed';\r\n    \r\n    // Remove directory traversal attempts and dangerous characters\r\n    return fileName\r\n      .replace(/[\\/\\\\:*?\"<>|]/g, '_') // Replace dangerous characters\r\n      .replace(/\\.\\./g, '_') // Remove directory traversal\r\n      .replace(/^\\.+/, '') // Remove leading dots\r\n      .substring(0, 255) // Limit filename length\r\n      .trim() || 'unnamed';\r\n  }\r\n\r\n  /**\r\n   * Validate URL to prevent malicious redirects\r\n   * @param url - The URL to validate\r\n   * @param allowedDomains - Optional array of allowed domains\r\n   * @returns True if URL is safe\r\n   */\r\n  static validateURL(url: string, allowedDomains?: string[]): boolean {\r\n    if (!url || typeof url !== 'string') return false;\r\n    \r\n    try {\r\n      const urlObj = new URL(url);\r\n      \r\n      // Only allow http and https protocols\r\n      if (!['http:', 'https:'].includes(urlObj.protocol)) {\r\n        return false;\r\n      }\r\n      \r\n      // Check allowed domains if provided\r\n      if (allowedDomains && allowedDomains.length > 0) {\r\n        const hostname = urlObj.hostname.toLowerCase();\r\n        return allowedDomains.some(domain => \r\n          hostname === domain.toLowerCase() || \r\n          hostname.endsWith('.' + domain.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate input length\r\n   * @param input - The input to validate\r\n   * @param maxLength - Maximum allowed length\r\n   * @returns True if input length is within limit\r\n   */\r\n  static validateLength(input: string, maxLength: number): boolean {\r\n    if (typeof input !== 'string') return false;\r\n    return input.length <= maxLength;\r\n  }\r\n\r\n  /**\r\n   * Rate limiter class to prevent abuse\r\n   */\r\n  static RateLimiter = class {\r\n    public timestamps: Map<string, number[]> = new Map();\r\n\r\n    /**\r\n     * Check if action is allowed based on rate limit\r\n     * @param key - Unique identifier for the rate limit (e.g., user ID, IP)\r\n     * @param limit - Maximum number of actions allowed\r\n     * @param windowMs - Time window in milliseconds\r\n     * @returns True if action is allowed\r\n     */\r\n    checkLimit(key: string, limit: number, windowMs: number = 60000): boolean {\r\n      const now = Date.now();\r\n      let userTimestamps = this.timestamps.get(key) || [];\r\n      \r\n      // Remove timestamps outside the window\r\n      userTimestamps = userTimestamps.filter(timestamp => \r\n        now - timestamp < windowMs\r\n      );\r\n      \r\n      if (userTimestamps.length >= limit) {\r\n        return false;\r\n      }\r\n      \r\n      userTimestamps.push(now);\r\n      this.timestamps.set(key, userTimestamps);\r\n      \r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Clean up old entries to prevent memory leaks\r\n     */\r\n    cleanup(): void {\r\n      const now = Date.now();\r\n      const oneHour = 3600000; // 1 hour\r\n      \r\n      for (const [key, timestamps] of this.timestamps.entries()) {\r\n        const validTimestamps = timestamps.filter(timestamp => \r\n          now - timestamp < oneHour\r\n        );\r\n        \r\n        if (validTimestamps.length === 0) {\r\n          this.timestamps.delete(key);\r\n        } else {\r\n          this.timestamps.set(key, validTimestamps);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generate a secure random ID\r\n   * @param length - Length of the ID (default: 16)\r\n   * @returns Random string ID\r\n   */\r\n  static generateSecureId(length: number = 16): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    \r\n    if (window.crypto && window.crypto.getRandomValues) {\r\n      const array = new Uint8Array(length);\r\n      window.crypto.getRandomValues(array);\r\n      \r\n      for (let i = 0; i < length; i++) {\r\n        result += chars[array[i] % chars.length];\r\n      }\r\n    } else {\r\n      // Fallback for older browsers\r\n      for (let i = 0; i < length; i++) {\r\n        result += chars[Math.floor(Math.random() * chars.length)];\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Validate and sanitize configuration object\r\n   * @param config - Configuration object to validate\r\n   * @returns Sanitized configuration object\r\n   */\r\n  static sanitizeConfig(config: any): any {\r\n    if (!config || typeof config !== 'object') return {};\r\n    \r\n    const sanitized: any = {};\r\n    \r\n    // Sanitize string properties\r\n    for (const [key, value] of Object.entries(config)) {\r\n      if (typeof value === 'string') {\r\n        sanitized[key] = this.sanitizeHTML(value);\r\n      } else if (typeof value === 'number' || typeof value === 'boolean') {\r\n        sanitized[key] = value;\r\n      } else if (Array.isArray(value)) {\r\n        sanitized[key] = value.map(item => \r\n          typeof item === 'string' ? this.sanitizeHTML(item) : item\r\n        );\r\n      } else if (value && typeof value === 'object') {\r\n        sanitized[key] = this.sanitizeConfig(value);\r\n      }\r\n    }\r\n    \r\n    return sanitized;\r\n  }\r\n}\r\n\r\n// Export default rate limiter instances\r\nexport const messageLimiter = new SecurityUtils.RateLimiter();\r\nexport const uploadLimiter = new SecurityUtils.RateLimiter();\r\nexport const globalLimiter = new SecurityUtils.RateLimiter();\r\n\r\n// Clean up rate limiters every 5 minutes\r\nif (typeof window !== 'undefined') {\r\n  setInterval(() => {\r\n    messageLimiter.cleanup();\r\n    uploadLimiter.cleanup();\r\n    globalLimiter.cleanup();\r\n  }, 300000); // 5 minutes\r\n}","import { ChatbotConfig, Message } from './types';\nimport { SecurityUtils, messageLimiter } from './security-utils';\n\nexport class ChatbotCore {\n  protected config: ChatbotConfig;\n  protected container: HTMLElement | null = null;\n  protected isOpen = false;\n  protected messages: Message[] = [];\n  protected eventListeners: Map<string, Function[]> = new Map();\n\n  constructor(config: ChatbotConfig) {\n    // Sanitize the config to prevent XSS attacks\n    this.config = { ...this.getDefaultConfig(), ...SecurityUtils.sanitizeConfig(config) };\n    this.init();\n  }\n\n  private getDefaultConfig(): ChatbotConfig {\n    return {\n      primaryColor: '#007bff',\n      secondaryColor: '#6c757d',\n      textColor: '#212529',\n      backgroundColor: '#ffffff',\n      position: 'bottom-right',\n      width: 350,\n      height: 500,\n      zIndex: 9999,\n      autoOpen: false,\n      greeting: 'Hello! How can I help you today?',\n      placeholder: 'Type your message...',\n      borderRadius: 12,\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    };\n  }\n\n  private init(): void {\n    this.createContainer();\n    this.createStyles();\n    this.bindEvents();\n    \n    if (this.config.greeting) {\n      this.addMessage({\n        id: SecurityUtils.generateSecureId(),\n        text: SecurityUtils.sanitizeHTML(this.config.greeting),\n        sender: 'bot',\n        timestamp: new Date()\n      });\n    }\n  }\n\n  private createContainer(): void {\n    this.container = document.createElement('div');\n    this.container.className = 'chatbot-widget';\n    this.container.innerHTML = this.getTemplate();\n    document.body.appendChild(this.container);\n  }\n\n  private createStyles(): void {\n    if (document.getElementById('chatbot-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'chatbot-styles';\n    style.textContent = this.getStyles();\n    document.head.appendChild(style);\n  }\n\n  private getTemplate(): string {\n    // Sanitize all user-provided content to prevent XSS\n    const safePosition = SecurityUtils.sanitizeAttribute(this.config.position || 'bottom-right');\n    const safeLogo = this.config.logo ? SecurityUtils.validateURL(this.config.logo) \n      ? SecurityUtils.sanitizeAttribute(this.config.logo) \n      : '' : '';\n    const safeCompanyName = SecurityUtils.sanitizeHTML(this.config.companyName || 'Chat Support');\n    const safePlaceholder = SecurityUtils.sanitizeAttribute(this.config.placeholder || 'Type your message...');\n\n    return `\n      <div class=\"chatbot-container\" data-position=\"${safePosition}\">\n        <!-- Trigger Button -->\n        <button class=\"chatbot-trigger\" type=\"button\" aria-label=\"Open chat\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path d=\"M12 2C6.48 2 2 6.48 2 12C2 13.54 2.36 15.01 3 16.31L2 22L7.69 21C8.99 21.64 10.46 22 12 22C17.52 22 22 17.52 22 12S17.52 2 12 2Z\" fill=\"currentColor\"/>\n          </svg>\n        </button>\n\n        <!-- Chat Window -->\n        <div class=\"chatbot-window\">\n          <!-- Header -->\n          <div class=\"chatbot-header\">\n            ${safeLogo ? `<img src=\"${safeLogo}\" alt=\"Logo\" class=\"chatbot-logo\">` : ''}\n            <div class=\"chatbot-header-text\">\n              <h3>${safeCompanyName}</h3>\n              <span class=\"chatbot-status\">Online</span>\n            </div>\n            <button class=\"chatbot-close\" type=\"button\" aria-label=\"Close chat\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                <path d=\"M15 5L5 15M5 5L15 15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n              </svg>\n            </button>\n          </div>\n\n          <!-- Messages -->\n          <div class=\"chatbot-messages\" id=\"chatbot-messages\"></div>\n\n          <!-- Input -->\n          <div class=\"chatbot-input\">\n            <input \n              type=\"text\" \n              placeholder=\"${safePlaceholder}\" \n              id=\"chatbot-input\"\n              autocomplete=\"off\"\n              maxlength=\"1000\"\n            >\n            <button type=\"button\" id=\"chatbot-send\" aria-label=\"Send message\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                <path d=\"M18 2L9 11L18 2ZM18 2L12 18L9 11L2 8L18 2Z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  protected getStyles(): string {\n    return `\n      .chatbot-widget * {\n        box-sizing: border-box;\n      }\n\n      .chatbot-container {\n        position: fixed;\n        font-family: ${this.config.fontFamily};\n        z-index: ${this.config.zIndex};\n      }\n\n      .chatbot-container[data-position=\"bottom-right\"] {\n        bottom: 20px;\n        right: 20px;\n      }\n\n      .chatbot-container[data-position=\"bottom-left\"] {\n        bottom: 20px;\n        left: 20px;\n      }\n\n      .chatbot-trigger {\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        border: none;\n        background: ${this.config.primaryColor};\n        color: white;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: transform 0.2s, box-shadow 0.2s;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      }\n\n      .chatbot-trigger:hover {\n        transform: scale(1.05);\n        box-shadow: 0 6px 20px rgba(0,0,0,0.2);\n      }\n\n      .chatbot-window {\n        position: absolute;\n        bottom: 70px;\n        right: 0;\n        width: ${typeof this.config.width === 'number' ? this.config.width + 'px' : this.config.width};\n        height: ${typeof this.config.height === 'number' ? this.config.height + 'px' : this.config.height};\n        background: ${this.config.backgroundColor};\n        border-radius: ${this.config.borderRadius}px;\n        box-shadow: ${this.config.boxShadow || '0 8px 32px rgba(0,0,0,0.1)'};\n        display: none;\n        flex-direction: column;\n        overflow: hidden;\n      }\n\n      .chatbot-window.open {\n        display: flex;\n        animation: slideUp 0.3s ease-out;\n      }\n\n      @keyframes slideUp {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      .chatbot-header {\n        background: ${this.config.primaryColor};\n        color: white;\n        padding: 16px;\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .chatbot-logo {\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n      }\n\n      .chatbot-header-text h3 {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n      }\n\n      .chatbot-status {\n        font-size: 12px;\n        opacity: 0.9;\n      }\n\n      .chatbot-close {\n        margin-left: auto;\n        background: none;\n        border: none;\n        color: white;\n        cursor: pointer;\n        padding: 4px;\n        border-radius: 4px;\n      }\n\n      .chatbot-messages {\n        flex: 1;\n        padding: 16px;\n        overflow-y: auto;\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n      }\n\n      .message {\n        max-width: 85%;\n        padding: 8px 12px;\n        border-radius: 12px;\n        font-size: 14px;\n        line-height: 1.4;\n      }\n\n      .message.user {\n        background: ${this.config.primaryColor};\n        color: white;\n        align-self: flex-end;\n        border-bottom-right-radius: 4px;\n      }\n\n      .message.bot {\n        background: #f1f3f5;\n        color: ${this.config.textColor};\n        align-self: flex-start;\n        border-bottom-left-radius: 4px;\n      }\n\n      .chatbot-input {\n        padding: 16px;\n        display: flex;\n        gap: 8px;\n        border-top: 1px solid #e9ecef;\n      }\n\n      .chatbot-input input {\n        flex: 1;\n        padding: 12px;\n        border: 1px solid #e9ecef;\n        border-radius: 20px;\n        outline: none;\n        font-size: 14px;\n      }\n\n      .chatbot-input input:focus {\n        border-color: ${this.config.primaryColor};\n      }\n\n      .chatbot-input button {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        border: none;\n        background: ${this.config.primaryColor};\n        color: white;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n\n  private bindEvents(): void {\n    if (!this.container) return;\n\n    const trigger = this.container.querySelector('.chatbot-trigger');\n    const closeBtn = this.container.querySelector('.chatbot-close');\n    const sendBtn = this.container.querySelector('#chatbot-send');\n    const input = this.container.querySelector('#chatbot-input') as HTMLInputElement;\n\n    trigger?.addEventListener('click', () => this.toggle());\n    closeBtn?.addEventListener('click', () => this.close());\n    sendBtn?.addEventListener('click', () => this.sendMessage());\n    \n    input?.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        this.sendMessage();\n      }\n    });\n  }\n\n  private toggle(): void {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  public open(): void {\n    if (!this.container) return;\n    \n    const window = this.container.querySelector('.chatbot-window');\n    window?.classList.add('open');\n    this.isOpen = true;\n    this.emit('open');\n  }\n\n  public close(): void {\n    if (!this.container) return;\n    \n    const window = this.container.querySelector('.chatbot-window');\n    window?.classList.remove('open');\n    this.isOpen = false;\n    this.emit('close');\n  }\n\n  private sendMessage(): void {\n    const input = this.container?.querySelector('#chatbot-input') as HTMLInputElement;\n    const text = input?.value.trim();\n    \n    if (!text) return;\n\n    // Validate message length\n    if (!SecurityUtils.validateLength(text, 1000)) {\n      this.showError('Message is too long. Maximum length is 1000 characters.');\n      return;\n    }\n\n    // Apply rate limiting\n    const userKey = 'user'; // In production, use actual user ID or session ID\n    if (!messageLimiter.checkLimit(userKey, 10, 60000)) { // 10 messages per minute\n      this.showError('Please slow down. You can send up to 10 messages per minute.');\n      return;\n    }\n\n    const message: Message = {\n      id: SecurityUtils.generateSecureId(),\n      text: SecurityUtils.sanitizeHTML(text),\n      sender: 'user',\n      timestamp: new Date()\n    };\n\n    this.addMessage(message);\n    input.value = '';\n    \n    this.emit('message', message);\n    \n    // Simulate bot response (replace with actual API call)\n    setTimeout(() => {\n      this.addBotResponse(text);\n    }, 1000);\n  }\n\n  protected addMessage(message: Message): void {\n    this.messages.push(message);\n    this.renderMessage(message);\n    this.scrollToBottom();\n  }\n\n  private renderMessage(message: Message): void {\n    const messagesContainer = this.container?.querySelector('#chatbot-messages');\n    if (!messagesContainer) return;\n\n    const messageEl = document.createElement('div');\n    messageEl.className = `message ${message.sender}`;\n    messageEl.textContent = message.text;\n    \n    messagesContainer.appendChild(messageEl);\n  }\n\n  protected addBotResponse(userMessage: string): void {\n    // Simple response logic (replace with actual bot logic)\n    const responses = [\n      \"Thank you for your message. How can I help you further?\",\n      \"I understand. Let me assist you with that.\",\n      \"That's interesting. Can you tell me more?\",\n      \"I'm here to help! What would you like to know?\"\n    ];\n    \n    const response = responses[Math.floor(Math.random() * responses.length)];\n    \n    this.addMessage({\n      id: SecurityUtils.generateSecureId(),\n      text: SecurityUtils.sanitizeHTML(response),\n      sender: 'bot',\n      timestamp: new Date()\n    });\n  }\n\n  protected showError(message: string): void {\n    // Show error message to user without exposing internal details\n    this.addMessage({\n      id: SecurityUtils.generateSecureId(),\n      text: SecurityUtils.sanitizeHTML(message),\n      sender: 'bot',\n      timestamp: new Date()\n    });\n  }\n\n  protected scrollToBottom(): void {\n    const messagesContainer = this.container?.querySelector('#chatbot-messages');\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }\n\n  protected generateId(): string {\n    return SecurityUtils.generateSecureId();\n  }\n\n  // Event system\n  public on(event: string, callback: Function): void {\n    if (!this.eventListeners.has(event)) {\n      this.eventListeners.set(event, []);\n    }\n    this.eventListeners.get(event)?.push(callback);\n  }\n\n  private emit(event: string, data?: any): void {\n    const listeners = this.eventListeners.get(event);\n    listeners?.forEach(callback => callback(data));\n  }\n\n  // Public API\n  public updateConfig(newConfig: Partial<ChatbotConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.destroy();\n    this.init();\n  }\n\n  public destroy(): void {\n    this.container?.remove();\n    const styles = document.getElementById('chatbot-styles');\n    styles?.remove();\n  }\n}","import { ChatbotCore } from './chatbot-core';\nimport { ChatbotConfig, Message } from './types';\nimport { AdvancedChatbotConfig, CustomButton } from './advanced-types';\nimport { SecurityUtils, uploadLimiter, messageLimiter } from './security-utils';\n\n// Enhanced core with API integration\nexport class AdvancedChatbotCore extends ChatbotCore {\n  private typingTimeout?: any;\n  private sessionId: string;\n  private isOnline = true;\n\n  constructor(config: AdvancedChatbotConfig) {\n    super(config);\n    this.sessionId = this.generateSessionId();\n    this.checkOnlineStatus();\n    this.initializeAdvancedFeatures();\n  }\n\n  // Helper to get config as AdvancedChatbotConfig\n  private get advancedConfig(): AdvancedChatbotConfig {\n    return this.config as AdvancedChatbotConfig;\n  }\n\n  private initializeAdvancedFeatures(): void {\n    if (this.advancedConfig.enableFileUpload) {\n      this.addFileUploadButton();\n    }\n    \n    if (this.advancedConfig.quickReplies?.length) {\n      this.addQuickReplies();\n    }\n    \n    if (this.advancedConfig.trackEvents) {\n      this.initializeAnalytics();\n    }\n  }\n\n  private addFileUploadButton(): void {\n    const input = this.container?.querySelector('.chatbot-input');\n    if (!input) return;\n\n    const fileButton = document.createElement('button');\n    fileButton.type = 'button';\n    fileButton.className = 'chatbot-file-btn';\n    fileButton.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n        <path d=\"M13.5 3H6.5C5.4 3 4.5 3.9 4.5 5V15C4.5 16.1 5.4 17 6.5 17H13.5C14.6 17 15.5 16.1 15.5 15V5C15.5 3.9 14.6 3 13.5 3Z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      </svg>\n    `;\n\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.style.display = 'none';\n    \n    // Set secure file upload restrictions\n    const allowedTypes = ['image/jpeg', 'image/png', 'application/pdf'];\n    fileInput.accept = allowedTypes.join(',');\n    \n    fileButton.addEventListener('click', () => fileInput.click());\n    fileInput.addEventListener('change', (e) => this.handleFileUpload(e));\n\n    input.insertBefore(fileButton, input.querySelector('#chatbot-send'));\n    input.appendChild(fileInput);\n  }\n\n  private async handleFileUpload(event: Event): Promise<void> {\n    const input = event.target as HTMLInputElement;\n    const file = input.files?.[0];\n    if (!file) return;\n\n    // Security validations\n    const maxFileSize = 10 * 1024 * 1024; // 10MB\n    const allowedTypes = ['image/jpeg', 'image/png', 'application/pdf', 'text/plain'];\n    \n    // Validate file size\n    if (!SecurityUtils.validateFileSize(file, maxFileSize)) {\n      this.showError('File is too large. Maximum size allowed is 10MB.');\n      input.value = '';\n      return;\n    }\n\n    // Validate file type\n    if (!SecurityUtils.validateFileType(file, allowedTypes)) {\n      this.showError('Invalid file type. Only JPEG, PNG, PDF, and TXT files are allowed.');\n      input.value = '';\n      return;\n    }\n\n    // Check upload rate limit\n    const userKey = 'user'; // In production, use actual user ID or session ID\n    if (!uploadLimiter.checkLimit(userKey, 3, 60000)) { // 3 uploads per minute\n      this.showError('Please slow down. You can upload up to 3 files per minute.');\n      input.value = '';\n      return;\n    }\n\n    // Sanitize filename\n    const sanitizedName = SecurityUtils.sanitizeFileName(file.name);\n\n    // Show upload progress\n    this.showTypingIndicator('Uploading file...');\n\n    try {\n      // Validate API URL before making request\n      if (!this.advancedConfig.apiUrl || !SecurityUtils.validateURL(this.advancedConfig.apiUrl)) {\n        throw new Error('Invalid API URL configuration');\n      }\n\n      const formData = new FormData();\n      formData.append('file', file, sanitizedName);\n      formData.append('sessionId', this.sessionId);\n\n      const response = await fetch(`${this.advancedConfig.apiUrl}/upload`, {\n        method: 'POST',\n        // Don't expose API key in file uploads - should use server-side proxy\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      this.addMessage({\n        id: SecurityUtils.generateSecureId(),\n        text: `Uploaded: ${sanitizedName}`,\n        sender: 'user',\n        timestamp: new Date(),\n        type: 'file',\n      });\n\n      this.hideTypingIndicator();\n      \n    } catch (error) {\n      console.error('File upload failed:', error);\n      this.hideTypingIndicator();\n      this.showError('Sorry, file upload failed. Please try again.');\n    }\n\n    input.value = '';\n  }\n\n  private addQuickReplies(): void {\n    const messagesContainer = this.container?.querySelector('#chatbot-messages');\n    if (!messagesContainer || !this.advancedConfig.quickReplies) return;\n\n    const quickRepliesContainer = document.createElement('div');\n    quickRepliesContainer.className = 'quick-replies';\n    \n    this.advancedConfig.quickReplies.forEach((reply: string) => {\n      const button = document.createElement('button');\n      button.className = 'quick-reply-btn';\n      button.textContent = SecurityUtils.sanitizeHTML(reply);\n      button.addEventListener('click', () => this.sendQuickReply(reply));\n      quickRepliesContainer.appendChild(button);\n    });\n\n    messagesContainer.appendChild(quickRepliesContainer);\n  }\n\n  private sendQuickReply(text: string): void {\n    // Validate and sanitize the quick reply text\n    if (!SecurityUtils.validateLength(text, 500)) {\n      this.showError('Quick reply is too long.');\n      return;\n    }\n\n    const sanitizedText = SecurityUtils.sanitizeHTML(text);\n    \n    this.addMessage({\n      id: SecurityUtils.generateSecureId(),\n      text: sanitizedText,\n      sender: 'user',\n      timestamp: new Date(),\n    });\n\n    // Hide quick replies after use\n    const quickReplies = this.container?.querySelector('.quick-replies') as HTMLElement;\n    if (quickReplies) {\n      quickReplies.style.display = 'none';\n    }\n\n    this.sendToAPI(sanitizedText);\n  }\n\n  private async sendToAPI(message: string): Promise<void> {\n    if (!this.advancedConfig.apiUrl) {\n      this.addBotResponse(message);\n      return;\n    }\n\n    // Validate API URL\n    if (!SecurityUtils.validateURL(this.advancedConfig.apiUrl)) {\n      this.showError('Invalid API configuration.');\n      return;\n    }\n\n    // Apply rate limiting for API calls\n    const userKey = 'user'; // In production, use actual user ID or session ID\n    if (!messageLimiter.checkLimit(userKey, 10, 60000)) { // 10 API calls per minute\n      this.showError('Please slow down. Too many requests.');\n      return;\n    }\n\n    this.showTypingIndicator();\n\n    try {\n      const response = await fetch(this.advancedConfig.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Don't expose API keys in client-side code\n          // Should use server-side proxy or token exchange\n        },\n        body: JSON.stringify({\n          message: SecurityUtils.sanitizeHTML(message),\n          sessionId: this.sessionId,\n          userId: this.advancedConfig.userId || 'anonymous',\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      this.hideTypingIndicator();\n      \n      // Sanitize API response\n      const botResponse = SecurityUtils.sanitizeHTML(data.response || data.message || 'I received your message.');\n      \n      this.addMessage({\n        id: SecurityUtils.generateSecureId(),\n        text: botResponse,\n        sender: 'bot',\n        timestamp: new Date(),\n      });\n\n    } catch (error) {\n      console.error('API call failed:', error);\n      this.hideTypingIndicator();\n      \n      if (!this.isOnline) {\n        const offlineMsg = SecurityUtils.sanitizeHTML(\n          this.advancedConfig.offlineMessage || 'Sorry, I\\'m currently offline. Please try again later.'\n        );\n        this.addMessage({\n          id: SecurityUtils.generateSecureId(),\n          text: offlineMsg,\n          sender: 'bot',\n          timestamp: new Date(),\n        });\n      } else {\n        this.showError('Sorry, something went wrong. Please try again.');\n      }\n    }\n  }\n\n  private showTypingIndicator(text = 'Bot is typing...'): void {\n    if (!this.advancedConfig.enableTypingIndicator) return;\n\n    const messagesContainer = this.container?.querySelector('#chatbot-messages');\n    if (!messagesContainer) return;\n\n    // Remove existing typing indicator\n    const existingIndicator = messagesContainer.querySelector('.typing-indicator');\n    if (existingIndicator) {\n      existingIndicator.remove();\n    }\n\n    const indicator = document.createElement('div');\n    indicator.className = 'message bot typing-indicator';\n    \n    // Sanitize the typing text to prevent XSS\n    const safeText = SecurityUtils.sanitizeHTML(text);\n    \n    indicator.innerHTML = `\n      <div class=\"typing-dots\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      <small>${safeText}</small>\n    `;\n\n    messagesContainer.appendChild(indicator);\n    this.scrollToBottom();\n  }\n\n  private hideTypingIndicator(): void {\n    const indicator = this.container?.querySelector('.typing-indicator');\n    if (indicator) {\n      indicator.remove();\n    }\n  }\n\n  private checkOnlineStatus(): void {\n    if (typeof navigator !== 'undefined') {\n      this.isOnline = navigator.onLine;\n      \n      window.addEventListener('online', () => {\n        this.isOnline = true;\n        this.updateConnectionStatus();\n      });\n      \n      window.addEventListener('offline', () => {\n        this.isOnline = false;\n        this.updateConnectionStatus();\n      });\n    }\n  }\n\n  private updateConnectionStatus(): void {\n    const status = this.container?.querySelector('.chatbot-status');\n    if (status) {\n      status.textContent = this.isOnline ? 'Online' : 'Offline';\n      status.className = `chatbot-status ${this.isOnline ? 'online' : 'offline'}`;\n    }\n  }\n\n  private initializeAnalytics(): void {\n    this.trackEvent('widget_loaded');\n    \n    this.on('open', () => this.trackEvent('widget_opened'));\n    this.on('close', () => this.trackEvent('widget_closed'));\n    this.on('message', (msg: Message) => {\n      this.trackEvent('message_sent', { \n        sender: msg.sender,\n        messageLength: msg.text.length \n      });\n    });\n  }\n\n  private trackEvent(event: string, data?: any): void {\n    if (!this.advancedConfig.trackEvents || !this.advancedConfig.apiUrl) return;\n\n    // Validate API URL before tracking\n    if (!SecurityUtils.validateURL(this.advancedConfig.apiUrl)) return;\n\n    // Sanitize event data\n    const sanitizedData = data ? SecurityUtils.sanitizeConfig(data) : undefined;\n\n    fetch(`${this.advancedConfig.apiUrl}/analytics`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        // Don't expose API keys - should use server-side proxy\n      },\n      body: JSON.stringify({\n        event: SecurityUtils.sanitizeHTML(event),\n        data: sanitizedData,\n        sessionId: this.sessionId,\n        userId: this.advancedConfig.userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n      }),\n    }).catch(console.error);\n  }\n\n  private generateSessionId(): string {\n    return 'session_' + SecurityUtils.generateSecureId(16);\n  }\n\n  // Enhanced styles for new features\n  protected getEnhancedStyles(): string {\n    return this.getStyles() + `\n      .chatbot-file-btn {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        border: 1px solid #e9ecef;\n        background: white;\n        color: ${this.config.primaryColor};\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 8px;\n      }\n\n      .quick-replies {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin: 8px 0;\n      }\n\n      .quick-reply-btn {\n        background: white;\n        border: 1px solid ${this.config.primaryColor};\n        color: ${this.config.primaryColor};\n        padding: 6px 12px;\n        border-radius: 16px;\n        cursor: pointer;\n        font-size: 12px;\n        transition: all 0.2s;\n      }\n\n      .quick-reply-btn:hover {\n        background: ${this.config.primaryColor};\n        color: white;\n      }\n\n      .typing-indicator {\n        opacity: 0.8;\n      }\n\n      .typing-dots {\n        display: flex;\n        gap: 4px;\n        margin-bottom: 4px;\n      }\n\n      .typing-dots span {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        background: ${this.config.primaryColor};\n        animation: typing 1.4s infinite ease-in-out;\n      }\n\n      .typing-dots span:nth-child(2) {\n        animation-delay: 0.2s;\n      }\n\n      .typing-dots span:nth-child(3) {\n        animation-delay: 0.4s;\n      }\n\n      @keyframes typing {\n        0%, 80%, 100% { opacity: 0.3; transform: scale(0.8); }\n        40% { opacity: 1; transform: scale(1); }\n      }\n\n      .chatbot-status.offline {\n        color: #dc3545 !important;\n      }\n\n      .chatbot-status.online {\n        color: #28a745 !important;\n      }\n    `;\n  }\n}"],"names":[],"mappings":"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"}